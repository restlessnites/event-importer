[project]
name = "event-importer"
version = "1.2.0"
description = "A CLI tool for importing events from various sources."
readme = "README.md"
requires-python = ">=3.12"
license = { file = "LICENSE" }
authors = [{ name = "Event Importer Contributors" }]
dependencies = [
    "click>=8.2.1",
    "clicycle>=1.0.3",
    "requests>=2.32.4",
    "mcp>=0.1.0",
    "anthropic>=0.54.0",
    "openai>=1.12.0",
    "python-dotenv>=1.0.0",
    "aiohttp>=3.9.0",
    "certifi>=2025.4.26",
    "websockets>=11.0",
    "beautifulsoup4>=4.12.0",
    "pillow>=10.0.0",
    "tenacity>=9.1.2",
    "pydantic>=2.11.0",
    "pydantic-settings>=2.9.1",
    "nh3>=0.2.20",
    "python-dateutil>=2.9.0",
    "price-parser>=0.3.4",
    "fastapi>=0.104.0",
    "uvicorn[standard]>=0.24.0",
    "python-multipart>=0.0.6",
    "sqlalchemy>=2.0.0",
    "alembic>=1.12.0",
]

[project.scripts]
event-importer = "app.main:main"

[project.urls]
Homepage = "https://www.restlessnites.com"

[project.entry-points."app.integrations"]
ticketfairy = "app.integrations.ticketfairy.base:TicketFairyIntegration"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["app"]

[tool.uv]
dev-dependencies = [
    "pytest>=8.4.1",
    "pytest-asyncio>=1.1.0",
    "pytest-cov>=6.2.1",
    "pytest-mock>=3.14.1",
    "black>=25.1.0",
    "ruff>=0.12.5",
    "pyinstaller>=6.11.1",
]

[tool.ruff]
target-version = "py312"
line-length = 88
exclude = [
    ".venv",
    "migrations",
    "node_modules",
    "__pycache__",
    "build",
    "dist",
    "*.ipynb"
]

[tool.ruff.lint]
preview = true
select = [
    "F",    # pyflakes
    "E",    # pycodestyle errors
    "W",    # pycodestyle warnings
    "I",    # isort
    "B",    # flake8-bugbear
    "UP",   # pyupgrade
    "S",    # bandit security checks
    "T20",  # flake8-print
    "C90",  # McCabe complexity
    "N",    # pep8-naming
    "A",    # flake8-builtins
    "ARG",  # flake8-unused-arguments
    "PTH",  # flake8-use-pathlib
    "RET",  # flake8-return
    "SIM",  # flake8-simplify
    "LOG",  # flake8-logging
    "PLC0415", # import-outside-toplevel
]

ignore = [
    "E501",  # line too long
    "B008",  # function call in default argument
    "S101",  # assert used (common in tests)
    "T201",  # print found (allow intentional CLI output)
    "S603",  # subprocess call without shell=True (if you use subprocess safely)
    "S607",  # starting process with partial executable path
]

[tool.ruff.lint.mccabe]
max-complexity = 10

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["S101", "ARG001", "S105", "S106"]  # Allow asserts, unused args, hardcoded passwords in tests
"**/migrations/*" = ["N806"]  # Allow non-lowercase variable names in migrations 

[tool.black]
line-length = 88
target-version = ["py310"]

[tool.pytest.ini_options]
minversion = "8.0"
testpaths = ["tests", "scripts"]
pythonpath = ["."]
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"
addopts = [
    "-v",
    "--strict-markers",
    "--cov=app",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
    "--cov-fail-under=50",
]

[tool.coverage.run]
source = ["app"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/migrations/*",
]

[tool.coverage.report]
precision = 2
show_missing = true
skip_covered = false

[tool.coverage.html]
directory = "htmlcov"

[tool.setuptools.packages.find]
where = ["."]
include = ["app*"]